version: 2
jobs:
  build:
    environment:
      working_directory: /TribesBackend
      # Configure the JVM and Gradle to avoid OOM errors
      _JAVA_OPTIONS: "-Xmx3g"
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"
    docker:
      - image: circleci/openjdk:11.0.3-jdk-stretch
    steps:
      - checkout
      - restore_cache:
          key: v1-gradle-wrapper-{{ checksum "TribesBackend/gradle/wrapper/gradle-wrapper.properties" }}
      - restore_cache:
          key: v1-gradle-cache-{{ checksum "TribesBackend/build.gradle" }}
      - run:
          name: Install dependencies
          command: ./TribesBackend/gradlew dependencies
      - run:
          name: build
          command: |
              cd TribesBackend
              ./gradlew build
      - save_cache:
          paths:
            - ~/TribesBackend/.gradle/wrapper
          key: v1-gradle-wrapper-{{ checksum "TribesBackend/gradle/wrapper/gradle-wrapper.properties" }}
      - save_cache:
          paths:
            - ~/TribesBackend/.gradle/caches
          key: v1-gradle-cache-{{ checksum "TribesBackend/build.gradle" }}
      - persist_to_workspace:
          root: .
          paths:
            - .
  tests:
    environment:
      # Configure the JVM and Gradle to avoid OOM errors
      _JAVA_OPTIONS: "-Xmx3g"
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"
    docker:
      - image: circleci/openjdk:11.0.3-jdk-stretch
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Run tests
          # Use "./gradlew test" instead if tests are not run in parallel
          command: |
              cd TribesBackend
              ./gradlew test -i
      - run:
          name: Assemble JAR
          command: |
            # Skip this for other nodes
            if [ "$CIRCLE_NODE_INDEX" == 0 ]; then
              cd TribesBackend
              ./gradlew assemble
            fi
      # This will be empty for all nodes except the first one
      - store_artifacts:
          path: TribesBackend/build/libs
  deploy:
    environment:
      # Configure the JVM and Gradle to avoid OOM errors
      _JAVA_OPTIONS: "-Xmx3g"
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"
    docker:
      - image: circleci/openjdk:11.0.3-jdk-stretch
    steps:          
      - run:
          name: Setup Heroku
          command: |  
            machine api.heroku.com
              login $HEROKU_LOGIN
              password $HEROKU_API_KEY
            EOF
            cat >> ~/.ssh/config << EOF
            VerifyHostKeyDNS yes
            StrictHostKeyChecking no
            EOF
      - add_ssh_keys:
          fingerprints:
            - "74:94:4a:85:4f:c4:48:32:51:d0:04:e3:f0:2a:55:6d"
      - deploy:
          name: "Deploy to Heroku"
          command: git push --force git@heroku.com:$HEROKU_APP_NAME.git HEAD:refs/heads/master

workflows:
  version: 2
  workflow:
    jobs:
    - build
    - tests:
        requires:
          - build
    - deploy:
        requires:
          - build
          - tests